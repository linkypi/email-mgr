version: '3.8'

services:
  # MySQL数据库
#  mysql:
#    image: mysql:8.0
#    container_name: ruoyi-mysql
#    restart: unless-stopped
#    environment:
#      MYSQL_ROOT_PASSWORD: 12345678
#      MYSQL_DATABASE: email_mgr
#      MYSQL_USER: ruoyi
#      MYSQL_PASSWORD: ruoyi123
#    volumes:
#      - mysql_data:/var/lib/mysql
#      - ./sql:/docker-entrypoint-initdb.d
#    ports:
#      - "3306:3306"
#    command: --default-authentication-plugin=mysql_native_password
#    networks:
#      - ruoyi-network
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      timeout: 20s
#      retries: 10
#
#  # Redis缓存
#  redis:
#    image: redis:7-alpine
#    container_name: ruoyi-redis
#    restart: unless-stopped
#    command: redis-server --appendonly yes
#    volumes:
#      - redis_data:/data
#    ports:
#      - "6379:6379"
#    networks:
#      - ruoyi-network
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      timeout: 20s
#      retries: 10

  # 后端应用
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: ruoyi-backend
    restart: unless-stopped
    volumes:
      - upload_data:/home/ruoyi/uploadPath
      # 挂载宿主机配置文件
      - ./application.yml:/app/application.yml:ro
      - ./application-druid.yml:/app/application-druid.yml:ro
    ports:
      - "28080:28080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ruoyi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:28080/"]
      timeout: 20s
      retries: 10

  # 前端应用
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: ruoyi-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ruoyi-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      timeout: 20s
      retries: 10

  # Nginx反向代理（可选，用于生产环境）
#  nginx-proxy:
#    image: nginx:alpine
#    container_name: ruoyi-nginx-proxy
#    restart: unless-stopped
#    volumes:
#      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
#    ports:
#      - "8080:80"
#    depends_on:
#      - frontend
#      - backend
#    networks:
#      - ruoyi-network
#    profiles:
#      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  upload_data:
    driver: local

networks:
  ruoyi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
