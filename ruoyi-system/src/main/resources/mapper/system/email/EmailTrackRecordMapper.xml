<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.email.EmailTrackRecordMapper">
    
    <resultMap type="EmailTrackRecord" id="EmailTrackRecordResult">
        <result property="id"    column="id"    />
        <result property="taskId"    column="task_id"    />
        <result property="messageId"    column="message_id"    />
        <result property="subject"    column="subject"    />
        <result property="recipient"    column="recipient"    />
        <result property="sender"    column="sender"    />
        <result property="content"    column="content"    />
        <result property="status"    column="status"    />
        <result property="sentTime"    column="sent_time"    />
        <result property="deliveredTime"    column="delivered_time"    />
        <result property="openedTime"    column="opened_time"    />
        <result property="repliedTime"    column="replied_time"    />
        <result property="clickedTime"    column="clicked_time"    />
        <result property="retryCount"    column="retry_count"    />
        <result property="errorLogs"    column="error_logs"    />
        <result property="accountId"    column="account_id"    />
        <result property="trackingPixelUrl"    column="tracking_pixel_url"    />
        <result property="trackingLinkUrl"    column="tracking_link_url"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="deleted"    column="deleted"    />
        <result property="isStarred"    column="is_starred"    />
        <result property="isImportant"    column="is_important"    />
        <result property="isRead"    column="is_read"    />
        <result property="folderType"    column="folder_type"    />
        <result property="userId"    column="user_id"    />
        <result property="readTime"    column="read_time"    />
        <result property="starredTime"    column="starred_time"    />
        <!-- <result property="receiveTime"    column="receive_time"    /> -->
    </resultMap>

    <sql id="selectEmailTrackRecordVo">
        id, task_id, message_id, subject, recipient, sender, content, status, sent_time, delivered_time, opened_time, replied_time, clicked_time, retry_count, error_logs, account_id, tracking_pixel_url, tracking_link_url, create_by, create_time, update_by, update_time, deleted, is_starred, is_important, is_read, folder_type, user_id, read_time, starred_time
    </sql>

    <select id="selectEmailTrackRecordList" parameterType="EmailTrackRecord" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        <where>  
            <if test="taskId != null "> and task_id = #{taskId}</if>
            <if test="messageId != null  and messageId != ''"> and message_id = #{messageId}</if>
            <if test="subject != null  and subject != ''"> and subject like concat('%', #{subject}, '%')</if>
            <if test="recipient != null  and recipient != ''"> and recipient like concat('%', #{recipient}, '%')</if>
            <if test="sender != null  and sender != ''"> and sender like concat('%', #{sender}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="accountId != null "> and account_id = #{accountId}</if>
            and deleted = '0'
        </where>
        order by create_time desc
    </select>
    
    <select id="selectEmailTrackRecordById" parameterType="Long" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        where id = #{id} and deleted = '0'
    </select>

    <select id="selectEmailTrackRecordByMessageId" parameterType="String" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        where message_id = #{messageId} and deleted = '0'
    </select>

    <select id="selectEmailTrackRecordBySubjectFuzzy" parameterType="String" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        where subject = #{subject} and deleted = '0'
        order by create_time desc
        limit 10
    </select>

    <select id="selectEmailTrackRecordByTaskId" parameterType="Long" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        where task_id = #{taskId} and deleted = '0'
        order by create_time desc
    </select>

    <select id="selectEmailTrackRecordByAccountId" parameterType="Long" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        where account_id = #{accountId} and deleted = '0'
        order by create_time desc
    </select>

    <select id="selectEmailTrackRecordByStatus" parameterType="String" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        where status = #{status} and deleted = '0'
        order by create_time desc
    </select>

    <select id="selectEmailTrackRecordStatsByTaskId" parameterType="Long" resultMap="EmailTrackRecordResult">
        select status, count(*) as retry_count
        from email_track_record
        where task_id = #{taskId} and deleted = '0'
        group by status
    </select>

    <select id="selectEmailTrackRecordStatsByAccountId" parameterType="Long" resultMap="EmailTrackRecordResult">
        select status, count(*) as retry_count
        from email_track_record
        where account_id = #{accountId} and deleted = '0'
        group by status
    </select>
        
    <insert id="insertEmailTrackRecord" parameterType="EmailTrackRecord" useGeneratedKeys="true" keyProperty="id">
        insert into email_track_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">task_id,</if>
            <if test="messageId != null and messageId != ''">message_id,</if>
            <if test="subject != null">subject,</if>
            <if test="recipient != null">recipient,</if>
            <if test="sender != null">sender,</if>
            <if test="content != null">content,</if>
            <if test="status != null">status,</if>
            <if test="sentTime != null">sent_time,</if>
            <if test="deliveredTime != null">delivered_time,</if>
            <if test="openedTime != null">opened_time,</if>
            <if test="repliedTime != null">replied_time,</if>
            <!-- <if test="receiveTime != null">receive_time,</if> -->
            <if test="clickedTime != null">clicked_time,</if>
            <if test="retryCount != null">retry_count,</if>
            <if test="errorLogs != null">error_logs,</if>
            <if test="accountId != null">account_id,</if>
            <if test="trackingPixelUrl != null">tracking_pixel_url,</if>
            <if test="trackingLinkUrl != null">tracking_link_url,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="deleted != null">deleted,</if>
            <if test="isStarred != null">is_starred,</if>
            <if test="isImportant != null">is_important,</if>
            <if test="isRead != null">is_read,</if>
            <if test="folderType != null">folder_type,</if>
            <if test="userId != null">user_id,</if>
            <if test="readTime != null">read_time,</if>
            <if test="starredTime != null">starred_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">#{taskId},</if>
            <if test="messageId != null and messageId != ''">#{messageId},</if>
            <if test="subject != null">#{subject},</if>
            <if test="recipient != null">#{recipient},</if>
            <if test="sender != null">#{sender},</if>
            <if test="content != null">#{content},</if>
            <if test="status != null">#{status},</if>
            <if test="sentTime != null">#{sentTime},</if>
            <if test="deliveredTime != null">#{deliveredTime},</if>
            <if test="openedTime != null">#{openedTime},</if>
            <if test="repliedTime != null">#{repliedTime},</if>
            <!-- <if test="receiveTime != null">#{receiveTime},</if> -->
            <if test="clickedTime != null">#{clickedTime},</if>
            <if test="retryCount != null">#{retryCount},</if>
            <if test="errorLogs != null">#{errorLogs},</if>
            <if test="accountId != null">#{accountId},</if>
            <if test="trackingPixelUrl != null">#{trackingPixelUrl},</if>
            <if test="trackingLinkUrl != null">#{trackingLinkUrl},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="deleted != null">#{deleted},</if>
            <if test="isStarred != null">#{isStarred},</if>
            <if test="isImportant != null">#{isImportant},</if>
            <if test="isRead != null">#{isRead},</if>
            <if test="folderType != null">#{folderType},</if>
            <if test="userId != null">#{userId},</if>
            <if test="readTime != null">#{readTime},</if>
            <if test="starredTime != null">#{starredTime},</if>
         </trim>
    </insert>

    <update id="updateEmailTrackRecord" parameterType="EmailTrackRecord">
        update email_track_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="messageId != null and messageId != ''">message_id = #{messageId},</if>
            <if test="subject != null">subject = #{subject},</if>
            <if test="recipient != null">recipient = #{recipient},</if>
            <if test="sender != null">sender = #{sender},</if>
            <if test="content != null">content = #{content},</if>
            <if test="status != null">status = #{status},</if>
            <if test="sentTime != null">sent_time = #{sentTime},</if>
            <if test="deliveredTime != null">delivered_time = #{deliveredTime},</if>
            <if test="openedTime != null">opened_time = #{openedTime},</if>
            <if test="repliedTime != null">replied_time = #{repliedTime},</if>
            <if test="clickedTime != null">clicked_time = #{clickedTime},</if>
            <if test="retryCount != null">retry_count = #{retryCount},</if>
            <if test="errorLogs != null">error_logs = #{errorLogs},</if>
            <if test="accountId != null">account_id = #{accountId},</if>
            <if test="trackingPixelUrl != null">tracking_pixel_url = #{trackingPixelUrl},</if>
            <if test="trackingLinkUrl != null">tracking_link_url = #{trackingLinkUrl},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEmailTrackRecordById" parameterType="Long">
        update email_track_record set deleted = '2' where id = #{id}
    </delete>

    <delete id="deleteEmailTrackRecordByIds" parameterType="String">
        update email_track_record set deleted = '2' where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteEmailTrackRecordByMessageId" parameterType="String">
        update email_track_record set deleted = '2' where message_id = #{messageId}
    </delete>

    <delete id="deleteEmailTrackRecordByTaskId" parameterType="Long">
        update email_track_record set deleted = '2' where task_id = #{taskId}
    </delete>

    <!-- 统计查询 -->
    <select id="countTotalEmails" resultType="long">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
    </select>

    <select id="countTodaySentEmails" parameterType="String" resultType="long">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND DATE(sent_time) = #{date}
    </select>

    <select id="countRepliedEmails" resultType="long">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND replied_time IS NOT NULL
    </select>

    <select id="countTodayOpenedEmails" parameterType="String" resultType="long">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND opened_time IS NOT NULL
        AND DATE(opened_time) = #{date}
    </select>

    <select id="countTotalOpenedEmails" resultType="long">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND opened_time IS NOT NULL
    </select>

    <select id="getSentEmailsByDateRange" resultType="java.util.Map">
        SELECT 
            DATE_FORMAT(sent_time, '%Y-%m-%d') as date,
            COUNT(*) as count
        FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND sent_time IS NOT NULL
        AND DATE(sent_time) BETWEEN #{startDate} AND #{endDate}
        GROUP BY DATE_FORMAT(sent_time, '%Y-%m-%d')
        ORDER BY date
    </select>

    <select id="getDeliveredEmailsByDateRange" resultType="java.util.Map">
        SELECT 
            DATE_FORMAT(delivered_time, '%Y-%m-%d') as date,
            COUNT(*) as count
        FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND delivered_time IS NOT NULL
        AND DATE(delivered_time) BETWEEN #{startDate} AND #{endDate}
        GROUP BY DATE_FORMAT(delivered_time, '%Y-%m-%d')
        ORDER BY date
    </select>

    <select id="countTodayDeliveredEmails" parameterType="String" resultType="long">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND delivered_time IS NOT NULL
        AND DATE(delivered_time) = #{date}
    </select>

    <select id="countTodayClickedEmails" parameterType="String" resultType="long">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND clicked_time IS NOT NULL
        AND DATE(clicked_time) = #{date}
    </select>

    <select id="getRecentEmails" parameterType="int" resultMap="EmailTrackRecordResult">
        SELECT 
            <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record 
        WHERE deleted = '0'
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        ORDER BY create_time DESC 
        LIMIT #{limit}
    </select>

    <select id="getRecentReplies" parameterType="int" resultMap="EmailTrackRecordResult">
        SELECT 
            <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record 
        WHERE deleted = '0' 
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        AND replied_time IS NOT NULL
        ORDER BY replied_time DESC 
        LIMIT #{limit}
    </select>

    <!-- ==================== 个人邮件管理相关SQL ==================== -->

    <!-- 查询个人邮件跟踪记录列表 -->
    <select id="selectPersonalTrackList" parameterType="EmailTrackRecord" resultMap="EmailTrackRecordResult">
        SELECT 
            etr.id, etr.task_id, etr.message_id, etr.subject, etr.recipient, etr.sender, etr.content, 
            etr.status, etr.sent_time, etr.delivered_time, etr.opened_time, etr.replied_time, etr.clicked_time,
            etr.retry_count, etr.error_logs, etr.account_id, etr.tracking_pixel_url, etr.tracking_link_url,
            etr.create_by, etr.create_time, etr.update_by, etr.update_time, etr.deleted, etr.folder_type,
            etr.is_starred, etr.is_read, etr.is_important, etr.starred_time, etr.user_id
        FROM email_track_record etr
        <where>
            etr.deleted = '0'
            <if test="userId != null">AND etr.user_id = #{userId}</if>
            <if test="folderType != null and folderType != ''">AND etr.folder_type = #{folderType}</if>
            <if test="isStarred != null">AND etr.is_starred = #{isStarred}</if>
            <if test="isRead != null">AND etr.is_read = #{isRead}</if>
            <if test="isImportant != null">AND etr.is_important = #{isImportant}</if>
            <if test="subject != null and subject != ''">AND etr.subject LIKE CONCAT('%', #{subject}, '%')</if>
            <if test="recipient != null and recipient != ''">AND etr.recipient LIKE CONCAT('%', #{recipient}, '%')</if>
            <if test="sender != null and sender != ''">AND etr.sender LIKE CONCAT('%', #{sender}, '%')</if>
            <if test="status != null and status != ''">AND etr.status = #{status}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(etr.sent_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(etr.sent_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
            
            <!-- 数据权限过滤 -->
            <if test="params.dataScope != null and params.dataScope != ''">
                AND ${params.dataScope}
            </if>
        </where>
        ORDER BY etr.sent_time DESC
    </select>

    <!-- 标记邮件为星标 -->
    <update id="markAsStarred" parameterType="Long">
        UPDATE email_track_record 
        SET is_starred = 1, starred_time = NOW(), update_time = NOW()
        WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 取消星标 -->
    <update id="unmarkAsStarred" parameterType="Long">
        UPDATE email_track_record 
        SET is_starred = 0, starred_time = NULL, update_time = NOW()
        WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 标记邮件为已读 -->
    <update id="markAsRead" parameterType="Long">
        UPDATE email_track_record 
        SET is_read = 1, read_time = NOW(), update_time = NOW()
        WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 标记邮件为未读 -->
    <update id="markAsUnread" parameterType="Long">
        UPDATE email_track_record 
        SET is_read = 0, read_time = NULL, update_time = NOW()
        WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 标记邮件为重要 -->
    <update id="markAsImportant" parameterType="Long">
        UPDATE email_track_record 
        SET is_important = 1, update_time = NOW()
        WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 取消重要标记 -->
    <update id="unmarkAsImportant" parameterType="Long">
        UPDATE email_track_record 
        SET is_important = 0, update_time = NOW()
        WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 移动到已删除 -->
    <update id="moveToDeleted" parameterType="Long">
        UPDATE email_track_record 
        SET deleted = '1', folder_type = 'deleted', update_time = NOW()
        WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 从已删除恢复 -->
    <update id="restoreFromDeleted" parameterType="Long">
        UPDATE email_track_record 
        SET deleted = '0', folder_type = 'sent', update_time = NOW()
        WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 获取发件箱未读数量 -->
    <select id="getSentUnreadCount" parameterType="Long" resultType="int">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND user_id = #{userId} 
        AND folder_type = 'sent' 
        AND is_read = 0
    </select>

    <!-- 获取发件箱总数量 -->
    <select id="getSentTotalCount" parameterType="Long" resultType="int">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND user_id = #{userId} 
        AND folder_type = 'sent'
    </select>

    <!-- 获取收件箱未读数量 -->
    <select id="getInboxUnreadCount" parameterType="Long" resultType="int">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND user_id = #{userId} 
        AND folder_type = 'inbox' 
        AND is_read = 0
    </select>

    <!-- 查询星标邮件列表 -->
    <select id="selectStarredList" parameterType="EmailTrackRecord" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        <where>
            deleted = '0'
            <if test="userId != null">AND user_id = #{userId}</if>
            AND is_starred = 1
            <if test="subject != null and subject != ''">AND subject LIKE CONCAT('%', #{subject}, '%')</if>
            <if test="recipient != null and recipient != ''">AND recipient LIKE CONCAT('%', #{recipient}, '%')</if>
            <if test="sender != null and sender != ''">AND sender LIKE CONCAT('%', #{sender}, '%')</if>
            <if test="status != null and status != ''">AND status = #{status}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(sent_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(sent_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
        ORDER BY starred_time DESC, sent_time DESC
    </select>

    <!-- 获取星标邮件数量 -->
    <select id="getStarredCount" parameterType="Long" resultType="int">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '0' 
        AND user_id = #{userId} 
        AND is_starred = 1
    </select>

    <!-- 查询已删除邮件列表 -->
    <select id="selectDeletedList" parameterType="EmailTrackRecord" resultMap="EmailTrackRecordResult">
        SELECT <include refid="selectEmailTrackRecordVo"/>
        FROM email_track_record
        <where>
            deleted = '1'
            <if test="userId != null">AND user_id = #{userId}</if>
            <if test="subject != null and subject != ''">AND subject LIKE CONCAT('%', #{subject}, '%')</if>
            <if test="recipient != null and recipient != ''">AND recipient LIKE CONCAT('%', #{recipient}, '%')</if>
            <if test="sender != null and sender != ''">AND sender LIKE CONCAT('%', #{sender}, '%')</if>
            <if test="status != null and status != ''">AND status = #{status}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(sent_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(sent_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
        ORDER BY update_time DESC, sent_time DESC
    </select>

    <!-- 获取已删除邮件数量 -->
    <select id="getDeletedCount" parameterType="Long" resultType="int">
        SELECT COUNT(*) FROM email_track_record 
        WHERE deleted = '1' 
        AND user_id = #{userId}
    </select>

    <!-- 获取个人邮件统计信息 -->
    <select id="getPersonalEmailStatistics" parameterType="Long" resultType="map">
        SELECT 
            COUNT(*) as totalEmails,
            SUM(CASE WHEN folder_type = 'sent' THEN 1 ELSE 0 END) as sentCount,
            SUM(CASE WHEN folder_type = 'inbox' THEN 1 ELSE 0 END) as inboxCount,
            SUM(CASE WHEN is_starred = 1 THEN 1 ELSE 0 END) as starredCount,
            SUM(CASE WHEN folder_type = 'deleted' THEN 1 ELSE 0 END) as deletedCount,
            SUM(CASE WHEN is_read = 0 THEN 1 ELSE 0 END) as unreadCount,
            SUM(CASE WHEN opened_time IS NOT NULL THEN 1 ELSE 0 END) as openedCount,
            SUM(CASE WHEN replied_time IS NOT NULL THEN 1 ELSE 0 END) as repliedCount,
            SUM(CASE WHEN clicked_time IS NOT NULL THEN 1 ELSE 0 END) as clickedCount
        FROM email_track_record 
        WHERE deleted = '0' 
        AND user_id = #{userId}
    </select>

    <!-- 获取详细统计数据 -->
    <select id="getDetailedStatistics" resultType="java.util.Map">
        SELECT
            DATE(sent_time) as date,
            sender as accountName,
            COUNT(*) as totalSent,
            COUNT(CASE WHEN delivered_time IS NOT NULL THEN 1 END) as delivered,
            COUNT(CASE WHEN opened_time IS NOT NULL THEN 1 END) as opened,
            COUNT(CASE WHEN replied_time IS NOT NULL THEN 1 END) as replied,
            ROUND(COUNT(CASE WHEN delivered_time IS NOT NULL THEN 1 END) * 100.0 / COUNT(*), 1) as deliveryRate,
            ROUND(COUNT(CASE WHEN opened_time IS NOT NULL THEN 1 END) * 100.0 / COUNT(*), 1) as openRate,
            ROUND(COUNT(CASE WHEN replied_time IS NOT NULL THEN 1 END) * 100.0 / COUNT(*), 1) as replyRate
        FROM email_track_record
        WHERE deleted = '0'
        AND folder_type = 'sent'  -- 只统计发件箱的数据
        <if test="startDate != null and endDate != null">
            AND sent_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="accountId != null">
            AND account_id = #{accountId}
        </if>
        GROUP BY DATE(sent_time), sender
        ORDER BY date DESC
    </select>
</mapper>
