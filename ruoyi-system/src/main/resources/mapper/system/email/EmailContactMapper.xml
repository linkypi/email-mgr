<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.email.EmailContactMapper">
    
    <resultMap type="EmailContact" id="EmailContactResult">
        <result property="contactId"    column="contact_id"    />
        <result property="name"    column="name"    />
        <result property="email"    column="email"    />
        <result property="company"    column="company"    />
        <result property="address"    column="address"    />
        <result property="age"    column="age"    />
        <result property="gender"    column="gender"    />
        <result property="socialMedia"    column="social_media"    />
        <result property="followers"    column="followers"    />
        <result property="level"    column="level"    />
        <result property="groupId"    column="group_id"    />
        <result property="tags"    column="tags"    />
        <result property="sendCount"    column="send_count"    />
        <result property="replyCount"    column="reply_count"    />
        <result property="openCount"    column="open_count"    />
        <result property="replyRate"    column="reply_rate"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="deleted"    column="deleted"    />
        <result property="groupName"    column="group_name"    />
    </resultMap>

    <sql id="selectEmailContactVo">
        select c.contact_id, c.name, c.email, c.company, c.address, c.age, c.gender, c.social_media, c.followers, c.level, c.group_id, c.tags, 
        COALESCE((
            select count(*) from email_track_record r 
            where r.recipient = c.email and r.sent_time is not null and r.deleted = '0'
        ), 0) as send_count,
        COALESCE((
            select count(*) from email_track_record r 
            where r.recipient = c.email and r.replied_time is not null and r.deleted = '0'
        ), 0) as reply_count,
        COALESCE((
            select count(*) from email_track_record r 
            where r.recipient = c.email and r.opened_time is not null and r.deleted = '0'
        ), 0) as open_count,
        CASE 
            WHEN COALESCE((
                select count(*) from email_track_record r 
                where r.recipient = c.email and r.sent_time is not null and r.deleted = '0'
            ), 0) > 0 THEN 
                ROUND(COALESCE((
                    select count(*) from email_track_record r 
                    where r.recipient = c.email and r.replied_time is not null and r.deleted = '0'
                ), 0) * 100.0 / COALESCE((
                    select count(*) from email_track_record r 
                    where r.recipient = c.email and r.sent_time is not null and r.deleted = '0'
                ), 1), 2)
            ELSE 0.00
        END as reply_rate,
        c.status, c.remark, c.create_by, c.create_time, c.update_by, c.update_time, c.deleted,
        g.group_name
        from email_contact c
        left join email_contact_group g on c.group_id = g.group_id
    </sql>

    <select id="selectEmailContactList" parameterType="EmailContact" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        <where>  
            <if test="name != null  and name != ''"> and c.name like concat('%', #{name}, '%')</if>
            <if test="email != null  and email != ''"> and c.email like concat('%', #{email}, '%')</if>
            <if test="company != null  and company != ''"> and c.company like concat('%', #{company}, '%')</if>
            <if test="level != null  and level != ''"> and c.level = #{level}</if>
            <if test="groupId != null "> and c.group_id = #{groupId}</if>
            <if test="tags != null  and tags != ''"> and c.tags like concat('%', #{tags}, '%')</if>
            <if test="status != null  and status != ''"> and c.status = #{status}</if>
            
            <!-- 数据权限过滤 -->
            <if test="params.dataScope != null and params.dataScope != ''">
                and ${params.dataScope}
            </if>
            
            <!-- 多等级查询 -->
            <if test="levels != null and levels.size() > 0">
                and c.level in
                <foreach item="level" collection="levels" open="(" separator="," close=")">
                    #{level}
                </foreach>
            </if>
            
            <!-- 多群组查询 -->
            <if test="groupIds != null and groupIds.size() > 0">
                and c.group_id in
                <foreach item="groupId" collection="groupIds" open="(" separator="," close=")">
                    #{groupId}
                </foreach>
            </if>
            
            <!-- 多标签查询 -->
            <if test="tagIds != null and tagIds.size() > 0">
                and (
                <foreach item="tagId" collection="tagIds" separator=" or ">
                    c.tags like concat('%', (select tag_name from email_contact_tag where tag_id = #{tagId}), '%')
                </foreach>
                )
            </if>
            
            and c.deleted = '0'
        </where>
        order by c.create_time desc
    </select>
    
    <select id="selectEmailContactByContactId" parameterType="Long" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        where c.contact_id = #{contactId} and c.deleted = '0'
    </select>

    <select id="selectEmailContactByEmail" parameterType="String" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        where c.email = #{email} and c.deleted = '0'
    </select>

    <select id="selectEmailContactByEmailIncludeDeleted" parameterType="String" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        where c.email = #{email}
    </select>

    <select id="selectEmailContactByGroupId" parameterType="Long" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        where c.group_id = #{groupId} and c.deleted = '0'
    </select>

    <select id="selectEmailContactByTag" parameterType="String" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        where c.tags like concat('%', #{tag}, '%') and c.deleted = '0'
    </select>

    <select id="selectTopReplyRateContacts" parameterType="int" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        where c.deleted = '0' and c.reply_rate > 0
        order by c.reply_rate desc
        limit #{limit}
    </select>
        
    <insert id="insertEmailContact" parameterType="EmailContact" useGeneratedKeys="true" keyProperty="contactId">
        insert into email_contact
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="email != null and email != ''">email,</if>
            <if test="company != null">company,</if>
            <if test="address != null">address,</if>
            <if test="age != null">age,</if>
            <if test="gender != null">gender,</if>
            <if test="socialMedia != null">social_media,</if>
            <if test="followers != null">followers,</if>
            <if test="level != null">level,</if>
            <if test="groupId != null">group_id,</if>
            <if test="tags != null">tags,</if>
            <if test="sendCount != null">send_count,</if>
            <if test="replyCount != null">reply_count,</if>
            <if test="openCount != null">open_count,</if>
            <if test="replyRate != null">reply_rate,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="email != null and email != ''">#{email},</if>
            <if test="company != null">#{company},</if>
            <if test="address != null">#{address},</if>
            <if test="age != null">#{age},</if>
            <if test="gender != null">#{gender},</if>
            <if test="socialMedia != null">#{socialMedia},</if>
            <if test="followers != null">#{followers},</if>
            <if test="level != null">#{level},</if>
            <if test="groupId != null">#{groupId},</if>
            <if test="tags != null">#{tags},</if>
            <if test="sendCount != null">#{sendCount},</if>
            <if test="replyCount != null">#{replyCount},</if>
            <if test="openCount != null">#{openCount},</if>
            <if test="replyRate != null">#{replyRate},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateEmailContact" parameterType="EmailContact">
        update email_contact
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="company != null">company = #{company},</if>
            <if test="address != null">address = #{address},</if>
            <if test="age != null">age = #{age},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="socialMedia != null">social_media = #{socialMedia},</if>
            <if test="followers != null">followers = #{followers},</if>
            <if test="level != null">level = #{level},</if>
            <if test="groupId != null">group_id = #{groupId},</if>
            <if test="tags != null">tags = #{tags},</if>
            <if test="sendCount != null">send_count = #{sendCount},</if>
            <if test="replyCount != null">reply_count = #{replyCount},</if>
            <if test="openCount != null">open_count = #{openCount},</if>
            <if test="replyRate != null">reply_rate = #{replyRate},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where contact_id = #{contactId}
    </update>

    <update id="updateContactStatistics" parameterType="Long">
        update email_contact c
        set c.send_count = COALESCE((
            select count(*) from email_track_record r 
            where (r.recipient = c.email OR r.recipient LIKE CONCAT('%', c.email, '%')) 
            and r.sent_time is not null and r.deleted = '0'
        ), 0),
        c.reply_count = COALESCE((
            select count(*) from email_track_record r 
            where (r.recipient = c.email OR r.recipient LIKE CONCAT('%', c.email, '%')) 
            and r.replied_time is not null and r.deleted = '0'
        ), 0),
        c.open_count = COALESCE((
            select count(*) from email_track_record r 
            where (r.recipient = c.email OR r.recipient LIKE CONCAT('%', c.email, '%')) 
            and r.opened_time is not null and r.deleted = '0'
        ), 0),
        c.reply_rate = case 
            when COALESCE((
                select count(*) from email_track_record r 
                where (r.recipient = c.email OR r.recipient LIKE CONCAT('%', c.email, '%')) 
                and r.sent_time is not null and r.deleted = '0'
            ), 0) > 0 then 
                round(COALESCE((
                    select count(*) from email_track_record r 
                    where (r.recipient = c.email OR r.recipient LIKE CONCAT('%', c.email, '%')) 
                    and r.replied_time is not null and r.deleted = '0'
                ), 0) * 100.0 / COALESCE((
                    select count(*) from email_track_record r 
                    where (r.recipient = c.email OR r.recipient LIKE CONCAT('%', c.email, '%')) 
                    and r.sent_time is not null and r.deleted = '0'
                ), 1), 2)
            else 0.00
        end
        where c.contact_id = #{contactId}
    </update>

    <delete id="deleteEmailContactByContactId" parameterType="Long">
        update email_contact set deleted = '2' where contact_id = #{contactId}
    </delete>

    <delete id="deleteEmailContactByContactIds" parameterType="String">
        update email_contact set deleted = '2' where contact_id in 
        <foreach item="contactId" collection="array" open="(" separator="," close=")">
            #{contactId}
        </foreach>
    </delete>

    <!-- 根据群组ID列表查询联系人 -->
    <select id="selectContactsByGroupIds" parameterType="list" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        join email_contact_group ecg on c.contact_id = ecg.contact_id
        where c.deleted = '0' and ecg.group_id in
        <foreach item="groupId" collection="list" open="(" separator="," close=")">
            #{groupId}
        </foreach>
        group by c.contact_id
    </select>

    <!-- 根据标签ID列表查询联系人 -->
    <select id="selectContactsByTagIds" parameterType="list" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        where c.deleted = '0' and (
            <foreach item="tagId" collection="list" separator=" OR ">
                FIND_IN_SET((SELECT tag_name FROM email_contact_tag WHERE tag_id = #{tagId} AND deleted = '0'), c.tags) > 0
            </foreach>
        )
    </select>

    <!-- 根据联系人ID列表查询联系人 -->
    <select id="selectContactsByIds" parameterType="list" resultMap="EmailContactResult">
        <include refid="selectEmailContactVo"/>
        where c.deleted = '0' and c.contact_id in
        <foreach item="contactId" collection="list" open="(" separator="," close=")">
            #{contactId}
        </foreach>
    </select>

    <!-- 批量更新联系人统计信息 -->
    <update id="batchUpdateContactStatistics" parameterType="list">
        update email_contact c
        set c.send_count = (
            select count(*) from email_send_record r 
            where r.contact_id = c.contact_id and r.status in ('1','2','3','4')
        ),
        c.reply_count = (
            select count(*) from email_send_record r 
            where r.contact_id = c.contact_id and r.status = '4'
        ),
        c.open_count = (
            select count(*) from email_send_record r 
            where r.contact_id = c.contact_id and r.status in ('3','4')
        ),
        c.reply_rate = case 
            when c.send_count > 0 then round(c.reply_count * 100.0 / c.send_count, 2)
            else 0.00
        end
        where c.contact_id in
        <foreach item="contactId" collection="list" open="(" separator="," close=")">
            #{contactId}
        </foreach>
    </update>

    <!-- 统计总联系人数量 -->
    <select id="countTotalContacts" resultType="long">
        SELECT COUNT(*) FROM email_contact WHERE deleted = '0'
    </select>

    <!-- 分页查询邮件联系人列表（优化版本，避免复杂子查询导致分页计数问题） -->
    <select id="selectEmailContactListForPage" parameterType="EmailContact" resultMap="EmailContactResult">
        select c.contact_id, c.name, c.email, c.company, c.address, c.age, c.gender, c.social_media, c.followers, c.level, c.group_id, c.tags, 
        c.send_count, c.reply_count, c.open_count, c.reply_rate,
        c.status, c.remark, c.create_by, c.create_time, c.update_by, c.update_time, c.deleted,
        g.group_name
        from email_contact c
        left join email_contact_group g on c.group_id = g.group_id
        <where>  
            <if test="name != null  and name != ''"> and c.name like concat('%', #{name}, '%')</if>
            <if test="email != null  and email != ''"> and c.email like concat('%', #{email}, '%')</if>
            <if test="company != null  and company != ''"> and c.company like concat('%', #{company}, '%')</if>
            <if test="level != null  and level != ''"> and c.level = #{level}</if>
            <if test="groupId != null "> and c.group_id = #{groupId}</if>
            <if test="tags != null  and tags != ''"> and c.tags like concat('%', #{tags}, '%')</if>
            <if test="status != null  and status != ''"> and c.status = #{status}</if>
            
            <!-- 数据权限过滤 -->
            <if test="params.dataScope != null and params.dataScope != ''">
                and ${params.dataScope}
            </if>
            
            <!-- 多等级查询 -->
            <if test="levels != null and levels.size() > 0">
                and c.level in
                <foreach item="level" collection="levels" open="(" separator="," close=")">
                    #{level}
                </foreach>
            </if>
            
            <!-- 多群组查询 -->
            <if test="groupIds != null and groupIds.size() > 0">
                and c.group_id in
                <foreach item="groupId" collection="groupIds" open="(" separator="," close=")">
                    #{groupId}
                </foreach>
            </if>
            
            <!-- 多标签查询 -->
            <if test="tagIds != null and tagIds.size() > 0">
                and (
                <foreach item="tagId" collection="tagIds" separator=" or ">
                    c.tags like concat('%', (select tag_name from email_contact_tag where tag_id = #{tagId}), '%')
                </foreach>
                )
            </if>
            
            and c.deleted = '0'
        </where>
        order by c.create_time desc
    </select>

    <!-- 根据搜索条件统计联系人数量 -->
    <select id="countContactsBySearch" parameterType="EmailContact" resultType="long">
        select count(*)
        from email_contact c
        left join email_contact_group g on c.group_id = g.group_id
        <where>  
            <if test="name != null  and name != ''"> and c.name like concat('%', #{name}, '%')</if>
            <if test="email != null  and email != ''"> and c.email like concat('%', #{email}, '%')</if>
            <if test="company != null  and company != ''"> and c.company like concat('%', #{company}, '%')</if>
            <if test="level != null  and level != ''"> and c.level = #{level}</if>
            <if test="groupId != null "> and c.group_id = #{groupId}</if>
            <if test="tags != null  and tags != ''"> and c.tags like concat('%', #{tags}, '%')</if>
            <if test="status != null  and status != ''"> and c.status = #{status}</if>
            
            <!-- 数据权限过滤 -->
            <if test="params.dataScope != null and params.dataScope != ''">
                and ${params.dataScope}
            </if>
            
            <!-- 多等级查询 -->
            <if test="levels != null and levels.size() > 0">
                and c.level in
                <foreach item="level" collection="levels" open="(" separator="," close=")">
                    #{level}
                </foreach>
            </if>
            
            <!-- 多群组查询 -->
            <if test="groupIds != null and groupIds.size() > 0">
                and c.group_id in
                <foreach item="groupId" collection="groupIds" open="(" separator="," close=")">
                    #{groupId}
                </foreach>
            </if>
            
            <!-- 多标签查询 -->
            <if test="tagIds != null and tagIds.size() > 0">
                and (
                <foreach item="tagId" collection="tagIds" separator=" or ">
                    c.tags like concat('%', (select tag_name from email_contact_tag where tag_id = #{tagId}), '%')
                </foreach>
                )
            </if>
            
            and c.deleted = '0'
        </where>
    </select>
</mapper>

