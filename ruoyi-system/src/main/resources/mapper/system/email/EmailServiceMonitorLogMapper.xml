<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.email.EmailServiceMonitorLogMapper">
    
    <resultMap type="EmailServiceMonitorLog" id="EmailServiceMonitorLogResult">
        <result property="id"    column="id"    />
        <result property="accountId"    column="account_id"    />
        <result property="emailAddress"    column="email_address"    />
        <result property="serviceType"    column="service_type"    />
        <result property="status"    column="status"    />
        <result property="message"    column="message"    />
        <result property="checkTime"    column="check_time"    />
        <result property="responseTime"    column="response_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectEmailServiceMonitorLogVo">
        select id, account_id, email_address, service_type, status, message, check_time, response_time, create_by, create_time, update_by, update_time, remark from email_service_monitor_log
    </sql>

    <select id="selectEmailServiceMonitorLogList" parameterType="EmailServiceMonitorLog" resultMap="EmailServiceMonitorLogResult">
        <include refid="selectEmailServiceMonitorLogVo"/>
        <where>  
            <if test="emailAddress != null  and emailAddress != ''"> and email_address like concat('%', #{emailAddress}, '%')</if>
            <if test="serviceType != null  and serviceType != ''"> and service_type = #{serviceType}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="checkTime != null "> and check_time = #{checkTime}</if>
        </where>
        order by check_time desc
    </select>
    
    <select id="selectEmailServiceMonitorLogById" parameterType="Long" resultMap="EmailServiceMonitorLogResult">
        <include refid="selectEmailServiceMonitorLogVo"/>
        where id = #{id}
    </select>
    
    <select id="selectEmailServiceMonitorLogByAccountId" parameterType="Long" resultMap="EmailServiceMonitorLogResult">
        <include refid="selectEmailServiceMonitorLogVo"/>
        where account_id = #{accountId}
        order by check_time desc
    </select>
        
    <insert id="insertEmailServiceMonitorLog" parameterType="EmailServiceMonitorLog" useGeneratedKeys="true" keyProperty="id">
        insert into email_service_monitor_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">account_id,</if>
            <if test="emailAddress != null and emailAddress != ''">email_address,</if>
            <if test="serviceType != null and serviceType != ''">service_type,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="message != null">message,</if>
            <if test="checkTime != null">check_time,</if>
            <if test="responseTime != null">response_time,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null and updateBy != ''">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountId != null">#{accountId},</if>
            <if test="emailAddress != null and emailAddress != ''">#{emailAddress},</if>
            <if test="serviceType != null and serviceType != ''">#{serviceType},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="message != null">#{message},</if>
            <if test="checkTime != null">#{checkTime},</if>
            <if test="responseTime != null">#{responseTime},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateEmailServiceMonitorLog" parameterType="EmailServiceMonitorLog">
        update email_service_monitor_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="accountId != null">account_id = #{accountId},</if>
            <if test="emailAddress != null and emailAddress != ''">email_address = #{emailAddress},</if>
            <if test="serviceType != null and serviceType != ''">service_type = #{serviceType},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="message != null">message = #{message},</if>
            <if test="checkTime != null">check_time = #{checkTime},</if>
            <if test="responseTime != null">response_time = #{responseTime},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEmailServiceMonitorLogById" parameterType="Long">
        delete from email_service_monitor_log where id = #{id}
    </delete>

    <delete id="deleteEmailServiceMonitorLogByIds" parameterType="String">
        delete from email_service_monitor_log where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="cleanHistoryLogs" parameterType="int">
        delete from email_service_monitor_log 
        where check_time &lt; date_sub(now(), interval #{days} day)
    </delete>
</mapper>
