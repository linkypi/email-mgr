<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.email.EmailTagMapper">
    
    <resultMap type="EmailTag" id="EmailTagResult">
        <result property="tagId"    column="tag_id"    />
        <result property="tagName"    column="tag_name"    />
        <result property="tagColor"    column="tag_color"    />
        <result property="contactCount"    column="contact_count"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectEmailTagVo">
        select tag_id, tag_name, tag_color, contact_count, status, create_by, create_time, update_by, update_time, remark from email_contact_tag
    </sql>

    <select id="selectEmailTagList" parameterType="EmailTag" resultMap="EmailTagResult">
        <include refid="selectEmailTagVo"/>
        <where>  
            <if test="tagName != null  and tagName != ''"> and tag_name like concat('%', #{tagName}, '%')</if>
            <if test="tagColor != null  and tagColor != ''"> and tag_color = #{tagColor}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectEmailTagByTagId" parameterType="Long" resultMap="EmailTagResult">
        <include refid="selectEmailTagVo"/>
        where tag_id = #{tagId}
    </select>
        
    <insert id="insertEmailTag" parameterType="EmailTag" useGeneratedKeys="true" keyProperty="tagId">
        insert into email_contact_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tagName != null and tagName != ''">tag_name,</if>
            <if test="tagColor != null">tag_color,</if>
            <if test="contactCount != null">contact_count,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tagName != null and tagName != ''">#{tagName},</if>
            <if test="tagColor != null">#{tagColor},</if>
            <if test="contactCount != null">#{contactCount},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateEmailTag" parameterType="EmailTag">
        update email_contact_tag
        <trim prefix="SET" suffixOverrides=",">
            <if test="tagName != null and tagName != ''">tag_name = #{tagName},</if>
            <if test="tagColor != null">tag_color = #{tagColor},</if>
            <if test="contactCount != null">contact_count = #{contactCount},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where tag_id = #{tagId}
    </update>

    <delete id="deleteEmailTagByTagId" parameterType="Long">
        delete from email_contact_tag where tag_id = #{tagId}
    </delete>

    <delete id="deleteEmailTagByTagIds" parameterType="String">
        delete from email_contact_tag where tag_id in 
        <foreach item="tagId" collection="array" open="(" separator="," close=")">
            #{tagId}
        </foreach>
    </delete>

    <update id="updateTagContactCount" parameterType="Long">
        update email_contact_tag set contact_count = (
            select count(*) from email_contact where find_in_set(#{tagId}, tags) > 0 and status = '0'
        ) where tag_id = #{tagId}
    </update>
</mapper>
